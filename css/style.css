/* Below is the first step, this is going to allow you to edit your elements a lot easier, and should be the first thing you do on every project*/
*,
*::before,
*::after {
    box-sizing: border-box;
}

/* Custom Properties - update these for your own design.
Bellow is the adjusting of font families (ff), and should also be one of the first things you do in every project. It doesn't have to be "primary" and "secondary", it can be the actual font family name, such as sans-serif or monospace. You will notice that we are creating a variable (fw-reg) and assigning a value to it (300). This is NOT variable and assignment, rather, it is called "Custom Properties"*/

:root {
    --ff-primary: 'Source Sans Pro', sans-serif;
    --ff-secondary: 'Source Code Pro', monospace;
    
    --fw-reg: 300;
    --fw-bold: 900;
    
    --clr-light: #fff;
    --clr-dark: #303030;
    --clr-accent: #16e0bd;
    
    --fs-h1: 3rem;
    --fs-h2: 2.25rem;
    --fs-h3: 1.25rem;
    --fs-body: 1rem;
    
    --bs: 0.25em 0.25em 0.75em rgba(0,0,0,.25),
          0.125em 0.125em 0.25em rgba(0,0,0,.15);
}

/*Why go to all of the trouble of setting up a css-based custom properties section when you can do it on frameworks. One of the major advantages is that you can change the properties within a media query, which is not something you can do with other frameworks. Below, =instead of needing to painstakingly go through our CSS and redefine each component. Thanks to what we have done in the media query below, everything will adjust when required*/

/*This media query is a generic one, but it works well for this site*/

@media (min-width: 800px) {
    :root {
        --fs-h1: 4.5rem;    /* Font will now auto change to larger size for larger screens*/
        --fs-h2: 3.75rem;
        --fs-h3: 1.5rem;
        --fs-body: 1.125rem;
    }
}

/* General styles */

html {
    scroll-behavior: smooth; /*Scrolls instead of jumping when clicked*/
}

body {
    background: var(--clr-light);
    color: var(--clr-dark);
    margin: 0;
    font-family: var(--ff-primary);
    font-size: var(--fs-body);
    line-height: 1.6;
}

section {
    padding: 5em 2em;
}

img {
    display: block;
    max-width: 100%;
}

strong { font-weight: var(--fw-bold) }

/*This is for a user who tabs onto a link or button, it transforms and makes it noticeable*/
:focus {        
    outline: 3px solid var(--clr-accent);
    outline-offset: 3px;
}

/* Buttons */

.btn {
    display: inline-block;
    padding: .5em 2.5em;
    background: var(--clr-accent);
    color: var(--clr-dark);
    text-decoration: none;
    /* This cursor code is important to differentiate when the cursor hovers over a button instead of a link */
    cursor: pointer;        
    font-size: .8rem;
    text-transform: uppercase;
    letter-spacing: 2px;
    font-weight: var(--fw-bold);
    transition: transfrom 200ms ease-in-out;
}

.btn:hover{
    transform: scale(1.1);
}

/* Typography */

h1,
h2,
h3 {
    line-height: 1;
    margin: 0;
}

h1 { font-size: var(--fs-h1) }
h2 { font-size: var(--fs-h2) }
h3 { font-size: var(--fs-h3) }


.section__title {
    margin-bottom: .25em;
}

.section__title--intro {
    font-weight: var(--fw-reg);
}

.section__title--intro strong {
    display: block;
}

.section__subtitle {
    margin: 0;
    font-size: var(--fs-h3);
}

.section__subtitle--intro,
.section__subtitle--about {
    background: var(--clr-accent);
    padding: .25em 1em;
    font-family: var(--ff-secondary);
    margin-bottom: 1em;
}

.section__subtitle--work {
    color: var(--clr-accent);
    font-weight: var(--fw-bold);
    margin-bottom: 2em;
}

/* header */

header{
    display: flex;
    justify-content: space-between;
    padding: 1em;
}

.logo {
    max-width: 150px;
}

.nav{
    position: fixed;
    background: var(--clr-dark);
    color: var(--clr-light);
    top: 0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 100;
/* Below is the transition code for using the nav button*/
    transform: translateX(100%);
    transition: transform 250ms cubic-bezier(.5, 0, .5, 1);
}

.nav__list{
    list-style: none;
    display: flex;
    height: 100%;
    flex-direction: column;
    justify-content: space-evenly;
    align-items: center;
    margin: 0;
    padding: 0;
}

.nav__link {
    color: inherit;
    font-weight: var(--fw-bold);
    font-size: var(--fs-h2);
    text-decoration: none;
}

.nav__link:hover {
    color: var(--clr-accent);
}

.nav-toggle {
    padding: .5em;
    background: transparent;
    border: 0;
    cursor: pointer;
    position: absolute;
    right: 1em;
    top: 1em;
    z-index: 1000;
}

.nav-open .nav {
    transform: translateX(0);
}

.nav-open .nav-toggle {
    position: fixed;
}

.nav-open .hamburger {
    transform: rotate(.625turn);
}

.nav-open .hamburger::before {
    transform: rotate(90deg) translateX(-6px);
}

.nav-open .hamburger::after {
    opacity: 0;
}


.hamburger {
    display: block;
    position: relative;
}
/*Above is the first button in the hamburger nav, to create the rest we require pseudo-element: */
.hamburger,
.hamburger::before,
.hamburger::after {
    background: var(--clr-accent);
    width: 2em;
    height: 3px;
    border-radius: 1em;
    transition: transform 250ms ease-in-out;
}


.hamburger::before,
.hamburger::after {
    content: '';
    position: absolute;
    left: 0;
    right: 0;
}

.hamburger::before { top: 6px; }
.hamburger::after { bottom: 6px; }


/*  Intro section  */

.intro {
    position: relative;
}

.intro__img {
    box-shadow: var(--bs);
}

.section__subtitle--intro {
    display: inline-block;
}

@media (min-width: 600px) {
    .intro {
        display: grid;
        width: min-content;
        margin: 0 auto;
        grid-column-gap: 1em;
        grid-template-areas: 
            "img title"
            "img subtitle";
        grid-template-columns: min-content max-content;
    }
    
    .intro__img {
        grid-area: img;
        min-width: 250px;
        position: relative;
        z-index: 2;
    }    
    
    .section__subtitle--intro {
        align-self: start;
        grid-column: -1 / 1;
        grid-row: 2;
        text-align: right;
        position: relative;
        left: -1.5em;
        width: calc(100% + 1.5em);
    }
}

/*  My services section  */

.my-services {
    background-color: var(--clr-dark);
    background-image: url(../img/services-bg.jpg);
    background-size: cover;
    /*background-blend-mode: multiply;*/ /*Can play around with the colour depending on how you want you text to stand out. I've commented out the darkening of the background*/
    color: var(--clr-light);
    text-align: center;
}

.section__title--services {
    color: var(--clr-accent);
    position: relative;
}

.section__title--services::after {
    content: '';        /* This content:'' code is REQUIRED for pseudo elements, otherwise they don't appear */
    display: block;
    width: 2em;
    height: 1px;
    margin: 0.5em auto 1em;
    background: var(--clr-light);
    opacity: 0.25;
}

.services{
    margin-bottom: 4em;
}

/*Below is developing a restriction of paragraph length, so that when there are in-between sized screens the text doesn't just keep expanding. */

.service {
    max-width: 500px;
    margin: 0 auto;
}

/* Below is the development of the services breaking into columns when the site is expanded onto bigger screens, rather than just following oe after the other */

@media (min-width: 800px) {
    .services {
        display: flex;
        max-width: 1000px;
        margin-left: auto;
        margin-right: auto;
    }

    /*element + element is a combinator that overlooks the 1st element, and takes note of the space between the 2nd and 3rd elements. Make no syntactical sense, but whatever. This is why they are front-end devs instead of back end or proper coders */

    .service + .service {
        margin-left: 2em;
    }
}

.about-me {
    max-width: 1000px;
    margin: 0 auto;
}

.about-me__img {
    box-shadow: var(--bs);
}

@media (min-width: 600px) {
    .about-me {
        display: grid;
        grid-template-columns: 1fr 200px;
        grid-template-areas: 
            "title img"
            "subtitle img"
            "text img";
        grid-column-gap: 2em;
    }
    
    .section__title--about {
        grid-area: title;
    }
    
    .section__subtitle--about {
        grid-column: 1 / -1;
        grid-row: 2;
        position: relative;
        left: -1em;
        width: calc(100% + 2em);
        padding-left: 1em;
        padding-right: calc(200px + 4em);
    }
    
    .about-me__img {
        grid-area: img;
        position: relative;
        z-index: 2;
    }
}

/* My Work */

.my-work {
    background-color: var(--clr-dark);
    color: var(--clr-light);
    text-align: center;    
}

.portfolio {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
}

.portfolio__item {
    background: var(--clr-accent);
    overflow: hidden;
}

.portfolio__img {
    transition: 
        transform 750ms cubic-bezier(.5, 0, .5, 1),
        opacity 250ms linear;
}

.portfolio__item:focus {
    position: relative;
    z-index: 2;
}

.portfolio__img:hover,
.portfolio__item:focus .portfolio__img {
    transform: scale(1.2);  /*Determines expansion of image*/
    opacity: .5;            /* Determineshow much background colour comes through*/
}

/* footer */

.footer {
    background: #111;
    color: var(--clr-accent);
    text-align: center;
    padding: 2.5em 0;
    font-size: var(--fs-h3);
}

/* This makes sure that any links in your footer have the color coming through */
.footer a { 
    color: inherit;
    text-decoration: none;
}

.footer__link {
    font-weight: var(--fw-bold);
}

.footer__link:hover,
.social-list__link:hover {
    opacity: .7;
}

.footer__link:hover {
    text-decoration: underline;
}

.social-list{
    list-style: none;
    display: flex;
    justify-content: center;
    margin: 2em 0 0;
    padding: 0;
}

.social-list__item {
    margin: 0 .25em;
}

.social-list__link{
    padding: .25em;
}

/* Portfolio item styles */

.portfolio-item-individual{
    padding: 0em 2em 2em;
    max-width: 1000px;
    margin: 0 auto;
}

.portfolio-item-individual p{
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
}

